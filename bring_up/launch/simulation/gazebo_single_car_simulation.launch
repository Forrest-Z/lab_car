<launch>
  <!-- 仿真需要1、仿真模型 2、地图 3、rviz 4、tf（odom to map） 5、小车控制（planning&path_follow) -->
  <param name="use_sim_time" value="true"/>
  
  <include file="$(find turtlebot3_gazebo)/launch/turtlebot3_world.launch">
    <arg name="model" value="burger" />
  </include>
  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(find turtlebot3_navigation)/maps/map.yaml"/>

  <!-- AMCL -->
  <include file="$(find turtlebot3_navigation)/launch/amcl.launch"/>
  <!-- 测试用tf -->
  <node pkg="tf" type="static_transform_publisher" name="base_footprint_to_base_link"
  args="0 0 0 0 0 0 base_footprint base_link 100" />

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
  </node>
  <!--  ************** Navigation ***************  -->
	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" >
      <rosparam file="$(find bring_up)/cfg/gazebo/single_car/costmap_common_params.yaml" command="load" ns="global_costmap" />
  	 	<rosparam file="$(find bring_up)/cfg/gazebo/single_car/costmap_common_params.yaml" command="load" ns="local_costmap" />
  		<rosparam file="$(find bring_up)/cfg/gazebo/single_car/local_costmap_params.yaml" command="load" />
  		<rosparam file="$(find bring_up)/cfg/gazebo/single_car/global_costmap_params.yaml" command="load" />
  		<rosparam file="$(find bring_up)/cfg/gazebo/single_car/teb_local_planner_params.yaml" command="load" />

		<param name="base_global_planner" value="global_planner/GlobalPlanner" />
		<param name="planner_frequency" value="1.0" />
		<param name="planner_patience" value="5.0" />

		<param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
		<param name="controller_frequency" value="5.0" />
		<param name="controller_patience" value="15.0" />
	</node>
  <!-- 车id -->
  <param name="car_id" 	  type="int" 			             value="0"                 />
  <!-- task node -->
  <node pkg="task_node"     type="build_up_task"      name="build_up_node"   output="screen"   />
  <!-- behavior tree -->
  <node pkg="decision_node" type="behavior_node"      name="bahevior_node"   output="screen"  />
  <!-- Run the rviz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find bring_up)/rviz/gazebo_simulation.rviz" />

</launch>